#!/stage1/busybox sh
export _PATH="$PATH"
export PATH=/stage1

busybox cd /
busybox date >>boot.txt
exec >>boot.txt 2>&1
busybox rm init
busybox mount -t proc proc /proc
busybox mount -t sysfs sysfs /sys

while ! busybox test -d /sys/dev/block/179:0 ; do
	busybox echo "waiting for internal mmc" >>boot.txt
	busybox sleep 1
done

/lvm/sbin/lvm vgscan --mknodes --ignorelockingfailure
/lvm/sbin/lvm vgchange -aly --ignorelockingfailure

# use blkid to detect fs type for /system
system_fs=$(busybox blkid '/dev/lvpool/system' | busybox awk -F 'TYPE=' '{print $2}' | busybox sed -e 's/"//g')
busybox echo "detected fs type $system_fs for /system" >>boot.txt
# unlikely but adding check anyway
# we don;t have acess to /proc/filesystems so we hardcode ext4 and f2fs
if busybox test  "$system_fs" = 'ext4' || busybox test "$system_fs" = 'f2fs'; then
busybox mount -t "$system_fs" /dev/lvpool/system /system
else
# let mount decide the fs type
busybox echo "auto detecting fail, relying on mount" >>boot.txt
busybox mount /dev/lvpool/system /system
fi;

busybox mount -t yaffs2 /dev/block/mtdblock3 /cache
busybox mount -t yaffs2 -o ro /dev/block/mtdblock1 /ramdisk

image=/ramdisk/ramdisk.cpio

if busybox test -e /cache/.startrecovery || \
   	busybox grep -q bootmode=2 /proc/cmdline || # normal mode
	busybox grep -q bootmode=5 /proc/cmdline || # xl mem
	busybox grep -q bootmode=9 /proc/cmdline || # big mem
	busybox grep -q bootmode=13 /proc/cmdline; then # no cam

	# recovery boot
	busybox echo 'RECOVERY BOOT' >>boot.txt
	busybox rm -fr /cache/.startrecovery
	image=/ramdisk/ramdisk-recovery.cpio
	busybox echo "loading ramdisk-recovery.img" >>boot.txt

	# disable lpm
	busybox echo 0 > /sys/class/power_supply/battery/charging_mode_booting

elif ! busybox test -e /system/build.prop ; then

	# emergency boot
	busybox echo "EMERGENCY BOOT" >>boot.txt
	busybox umount /cache
	erase_image cache
	busybox mount -t yaffs2 /dev/block/mtdblock3 /cache

	if ! busybox test -e /cache/recovery ; then
		busybox mkdir /cache/recovery
	fi

	busybox mount -t vfat /dev/block/mmcblk0p1 /sdcard
	busybox sleep 1

	if busybox test -e /sdcard/omni.cfg ; then
		busybox echo "installing: `busybox cat /sdcard/omni.cfg`" >>boot.txt
		busybox echo "creating recovery command" >>boot.txt
		busybox touch /cache/recovery/command
		busybox echo "--update_package=`busybox cat /sdcard/omni.cfg`" > /cache/recovery/command

		busybox umount /ramdisk
		erase_image ramdisk
		busybox mount -t yaffs2 /dev/block/mtdblock1 /ramdisk

		busybox cp /sdcard/ramdisk-recovery.img /ramdisk/ramdisk-recovery.img

		busybox mount -t yaffs2 -o remount,ro /dev/block/mtdblock1 /ramdisk
	else
		busybox echo "omni.cfg not found" >>boot.txt
	fi

	busybox echo "loading ramdisk-recovery.img" >>boot.txt
	image=/ramdisk/ramdisk-recovery.cpio

	# disable lpm
	busybox echo 0 > /sys/class/power_supply/battery/charging_mode_booting

	# umount sdcard
	busybox umount /sdcard

else
	# android boot
	busybox echo "ANDROID BOOT" >>boot.txt
	busybox echo "loading ramdisk.img" >>boot.txt
fi

busybox umount /cache
busybox umount /system
busybox rmdir /sdcard

busybox gzip -d < $image > /stage1/ramdisk.cpio

busybox umount /ramdisk

busybox cpio -ui < /stage1/ramdisk.cpio

busybox umount /sys
busybox umount /proc
busybox date >>boot.txt
busybox rm -fr /stage1 /ramdisk /dev/*
export PATH="${_PATH}"
exec /init
